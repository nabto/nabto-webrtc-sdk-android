plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

def optionsFile = rootProject.file("app/options.properties")
def defaultOptionsFile = rootProject.file("app/options.properties.default")
def props = new Properties()

if (optionsFile.exists()) {
    props.load(new FileInputStream(optionsFile))
} else if (defaultOptionsFile.exists()) {
    props.load(new FileInputStream(defaultOptionsFile))
} else {
    throw new GradleException("Missing options.properties and options.properties.default.")
}

android {
    namespace 'com.example.myapplication'
    compileSdk 35

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 26
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "PRODUCT_ID", "\"${props['product_id']}\""
        buildConfigField "String", "DEVICE_ID", "\"${props['device_id']}\""
        buildConfigField "String", "SHARED_SECRET", "\"${props['shared_secret']}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation project(':core')
    implementation project(':util')
    implementation project(':util2')
    implementation libs.stream.webrtc.android
    implementation libs.stream.webrtc.android.ui
    implementation libs.core.ktx
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}